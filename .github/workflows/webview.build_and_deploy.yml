name: ðŸš— [Webview] Build and Deploy

on:
  workflow_call:
    secrets:
      CLORUDFLARE_API_TOKEN:
        required: true
      CLOUDFLARE_ACCOUNT_ID:
        required: true
    inputs:
      CLOUDFLARE_PROJECT_NAME:
        type: string
      CLOUDFLARE_BRANCH_TARGET:
        type: string

env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ¥• Checkout Repository
        uses: actions/checkout@v4
      - name: ðŸ“¦ Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://npm.pkg.github.com/"
          always-auth: true
      - name: ðŸ“¦ Install pnpm
        uses: pnpm/action-setup@v3
        id: pnpm-install
        with:
          version: 9
          run_install: false
      - name: ðŸ’¸ Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
      - name: ðŸ’¸ Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-v9-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-v9
      - name: ðŸ“¦ Install node modules
        run: pnpm install
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
      - name: ðŸ›« Build application
        id: build_output
        run: pnpm build
      - name: ðŸ›« Deploy to CloudFlare
        uses: cloudflare/pages-action@1
        if: ${{ inputs.CLOUDFLARE_BRANCH_TARGET != null }}
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ inputs.CLOUDFLARE_PROJECT_NAME }}
          directory: dist # e.g. 'dist'
          branch: ${{ inputs.CLOUDFLARE_BRANCH_TARGET }}
